services:
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=${API_URL}
      - VITE_STRIPE_URL=${STRIPE_URL}
    networks:
      - cluedo-network
    depends_on:
      - backend
  
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    environment:
      - DB_HOST=${DB_HOST}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - BASE_URL=${FRONTEND_URL}
      - PORT=${BACKEND_PORT}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - cluedo-network
    volumes:
      - ./backend:/app
      - /app/node_modules

  db:
    image: mysql:8.0
    ports:
      - "${DATABASE_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - cluedo-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 5s
      timeout: 5s
      retries: 10

  stripe-cli:
    image: stripe/stripe-cli
    container_name: stripe-cli
    command: "listen --forward-to http://backend:${BACKEND_PORT}/contracts/webhook"
    environment:
      - STRIPE_API_KEY=${STRIPE_SECRET_KEY}
    depends_on:
      - backend
    networks:
      - cluedo-network
    restart: unless-stopped

volumes:
  mysql_data:

networks:
  cluedo-network:
    driver: bridge